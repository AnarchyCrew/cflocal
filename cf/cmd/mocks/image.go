// Code generated by MockGen. DO NOT EDIT.
// Source: code.cloudfoundry.org/cflocal/cf/cmd (interfaces: Image)

// Package mocks is a generated GoMock package.
package mocks

import (
	engine "github.com/buildpack/forge/engine"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockImage is a mock of Image interface
type MockImage struct {
	ctrl     *gomock.Controller
	recorder *MockImageMockRecorder
}

// MockImageMockRecorder is the mock recorder for MockImage
type MockImageMockRecorder struct {
	mock *MockImage
}

// NewMockImage creates a new mock instance
func NewMockImage(ctrl *gomock.Controller) *MockImage {
	mock := &MockImage{ctrl: ctrl}
	mock.recorder = &MockImageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockImage) EXPECT() *MockImageMockRecorder {
	return m.recorder
}

// Pull mocks base method
func (m *MockImage) Pull(arg0 string) <-chan engine.Progress {
	ret := m.ctrl.Call(m, "Pull", arg0)
	ret0, _ := ret[0].(<-chan engine.Progress)
	return ret0
}

// Pull indicates an expected call of Pull
func (mr *MockImageMockRecorder) Pull(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Pull", reflect.TypeOf((*MockImage)(nil).Pull), arg0)
}
