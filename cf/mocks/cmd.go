// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/sclevine/cflocal/cf (interfaces: Cmd)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Cmd interface
type MockCmd struct {
	ctrl     *gomock.Controller
	recorder *_MockCmdRecorder
}

// Recorder for MockCmd (not exported)
type _MockCmdRecorder struct {
	mock *MockCmd
}

func NewMockCmd(ctrl *gomock.Controller) *MockCmd {
	mock := &MockCmd{ctrl: ctrl}
	mock.recorder = &_MockCmdRecorder{mock}
	return mock
}

func (_m *MockCmd) EXPECT() *_MockCmdRecorder {
	return _m.recorder
}

func (_m *MockCmd) Match(_param0 []string) bool {
	ret := _m.ctrl.Call(_m, "Match", _param0)
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockCmdRecorder) Match(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Match", arg0)
}

func (_m *MockCmd) Run(_param0 []string) error {
	ret := _m.ctrl.Call(_m, "Run", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockCmdRecorder) Run(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Run", arg0)
}
